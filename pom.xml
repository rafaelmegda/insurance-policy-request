<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
		 xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		 xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>3.5.6</version>
		<relativePath/>
	</parent>

	<groupId>com.company</groupId>
	<artifactId>insurance-request</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>insurance-request</name>
	<description>Demo project for Spring Boot</description>

	<properties>
		<java.version>17</java.version>
		<jacoco.version>0.8.10</jacoco.version>
	</properties>

	<dependencies>
		<!-- suas dependências (mantidas) -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-integration</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.integration</groupId>
			<artifactId>spring-integration-jdbc</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-docker-compose</artifactId>
			<scope>runtime</scope>
			<optional>true</optional>
		</dependency>

		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<optional>true</optional>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-inline</artifactId>
			<version>5.2.0</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>com.h2database</groupId>
			<artifactId>h2</artifactId>
			<scope>runtime</scope>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-amqp</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.amqp</groupId>
			<artifactId>spring-rabbit-test</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.testcontainers</groupId>
			<artifactId>rabbitmq</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.mock-server</groupId>
			<artifactId>mockserver-client-java</artifactId>
			<version>5.15.0</version>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<build>
		<plugins>

			<!-- JaCoCo: prepara agente, gera relatório e checa limites -->
			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<version>${jacoco.version}</version>
				<executions>
					<!-- injetar o agent antes da fase de teste -->
					<execution>
						<id>prepare-agent</id>
						<goals>
							<goal>prepare-agent</goal>
						</goals>
						<configuration>
							<!-- arquivo de saída do exec -->
							<destFile>${project.build.directory}/jacoco.exec</destFile>
							<!-- cobertura para classes testadas no fork do surefire -->
							<propertyName>argLine</propertyName>
						</configuration>
					</execution>

					<!-- gerar relatório HTML após os testes -->
					<execution>
						<id>report</id>
						<phase>test</phase>
						<goals>
							<goal>report</goal>
						</goals>
						<configuration>
							<excludes>
								<exclude>com/company/insurance_request/infrastructure/adapter/input/controller/**</exclude>
								<exclude>com/company/insurance_request/infrastructure/adapter/input/controller/**/*.class</exclude>
								<exclude>com/company/insurance_request/infrastructure/adapter/input/dto/**</exclude>
								<exclude>com/company/insurance_request/infrastructure/adapter/input/dto/**/*.class</exclude>
								<exclude>com/company/insurance_request/domain/dto/**</exclude>
								<exclude>com/company/insurance_request/domain/dto/**/*.class</exclude>
								<exclude>com/company/insurance_request/domain/port/output/mapper/**</exclude>
								<exclude>src/main/java/com/company/insurance_request/infrastructure/adapter/input/mapper/**</exclude>
								<exclude>com/company/insurance_request/infrastructure/adapter/output/jpa/entity/**</exclude>
								<exclude>com/company/insurance_request/infrastructure/adapter/output/jpa/entity/**/*.class</exclude>
								<exclude>com/company/insurance_request/infrastructure/adapter/output/messaging/**</exclude>
								<exclude>com/company/insurance_request/infrastructure/adapter/output/messaging/**/*.class</exclude>
								<exclude>com/company/insurance_request/infrastructure/adapter/input/messaging/**</exclude>
								<exclude>com/company/insurance_request/infrastructure/adapter/input/messaging/**/*.class</exclude>
								<exclude>**/generated/**</exclude>
								<exclude>**/generated/**/*.class</exclude>
								<exclude>**/test/**</exclude>
								<exclude>**/*Exception*.class</exclude>
							</excludes>
						</configuration>
					</execution>
					<execution>
						<id>check</id>
						<goals>
							<goal>check</goal>
						</goals>
						<configuration>
							<rules>
								<rule>
									<element>BUNDLE</element>
									<limits>
										<limit>
											<counter>INSTRUCTION</counter>
											<value>COVEREDRATIO</value>
											<minimum>0.70</minimum>
										</limit>
									</limits>
								</rule>
							</rules>
							<excludes>
								<exclude>**/*Config*.class</exclude>
								<exclude>**/*Configuration*.class</exclude>
								<exclude>**/*Application*.class</exclude>
								<exclude>**/dto/**</exclude>
								<exclude>**/mapper/**</exclude>
							</excludes>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<!-- Compiler plugin (mantive config original para annotation processors) -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<annotationProcessorPaths>
						<path>
							<groupId>org.projectlombok</groupId>
							<artifactId>lombok</artifactId>
						</path>
					</annotationProcessorPaths>
				</configuration>
			</plugin>

			<!-- Spring Boot plugin -->
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<configuration>
					<excludes>
						<exclude>
							<groupId>org.projectlombok</groupId>
							<artifactId>lombok</artifactId>
						</exclude>
					</excludes>
				</configuration>
			</plugin>

			<!-- Surefire: inclui argLine injetado pelo JaCoCo -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>3.0.0-M7</version>
				<configuration>
					<!-- JaCoCo fornece ${argLine}; mantive suas flags extras -->
					<argLine>${argLine} -XX:+EnableDynamicAgentLoading -Djdk.instrument.traceUsage</argLine>
				</configuration>
			</plugin>

			<!-- Failsafe: para integration tests; também usa argLine -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-failsafe-plugin</artifactId>
				<version>3.0.0-M7</version>
				<configuration>
					<argLine>${argLine} -XX:+EnableDynamicAgentLoading -Djdk.instrument.traceUsage</argLine>
				</configuration>
			</plugin>

		</plugins>
	</build>
</project>
